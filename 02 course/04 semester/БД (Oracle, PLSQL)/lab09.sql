-- C__DSZ_PDB   | C##DSZ
-- DSZCORE      | DSZCORE | от него делаю
show con_name

-- 1
-- Пример для пользователя DSZCORE
-- sys
alter session set container = DSZ_PDB; -- DSZ_PDB  MY_PDB

GRANT CREATE SESSION TO DSZCORE;
GRANT CREATE TABLE TO DSZCORE;
GRANT CREATE SEQUENCE TO DSZCORE;
GRANT CREATE VIEW TO DSZCORE;
GRANT CREATE SYNONYM TO DSZCORE;
GRANT CREATE PUBLIC SYNONYM TO DSZCORE;
GRANT CREATE CLUSTER TO DSZCORE;
GRANT CREATE MATERIALIZED VIEW TO DSZCORE;
GRANT CREATE DATABASE LINK TO DSZCORE;
GRANT UNLIMITED TABLESPACE TO DSZCORE;

-- DSZCORE
-- 2
CREATE GLOBAL TEMPORARY TABLE temp_test (
    id NUMBER,
    value VARCHAR2(100)
) ON COMMIT DELETE ROWS;

INSERT INTO temp_test VALUES (1, 's');
INSERT INTO temp_test VALUES (2, 'r');
SELECT * FROM temp_test;
COMMIT;
-- DROP TABLE temp_test;

-- 3
CREATE SEQUENCE S1 START WITH 1000 INCREMENT BY 10
NOMINVALUE NOMAXVALUE
NOCYCLE NOCACHE NOORDER;

SELECT S1.NEXTVAL FROM dual;
SELECT S1.CURRVAL FROM dual;

-- 4
CREATE SEQUENCE S2 START WITH 10 INCREMENT BY 10
MAXVALUE 100 NOCYCLE;

SELECT S2.NEXTVAL FROM dual;

-- 5
CREATE SEQUENCE S3 START WITH 10 INCREMENT BY -10
MINVALUE -100 MAXVALUE 10 NOCYCLE ORDER;

SELECT S3.NEXTVAL FROM dual CONNECT BY LEVEL <= 12;
SELECT S3.NEXTVAL FROM dual;

-- 6
CREATE SEQUENCE S4 START WITH 1 INCREMENT BY 1
MAXVALUE 10 CYCLE CACHE 5 NOORDER;

SELECT S4.NEXTVAL FROM dual CONNECT BY LEVEL <= 20;

/*
    DROP SEQUENCE S1;
    DROP SEQUENCE S2;
    DROP SEQUENCE S3;
    DROP SEQUENCE S4;
*/
-- 7
SELECT sequence_name
FROM all_sequences
WHERE sequence_owner = 'DSZCORE';

-- 8
CREATE TABLE T1 ( N1 NUMBER(20), N2 NUMBER(20), N3 NUMBER(20), N4 NUMBER(20) )
STORAGE (BUFFER_POOL KEEP) CACHE;

BEGIN
  FOR i IN 1..7 LOOP
    INSERT INTO T1 ( N1, N2, N3, N4) 
    VALUES ( S1.NEXTVAL, S2.NEXTVAL, S3.NEXTVAL, S4.NEXTVAL );
  END LOOP;
END;

SELECT * FROM T1;
-- DROP TABLE T1;

-- 9
CREATE CLUSTER ABC ( X NUMBER(10), V VARCHAR2(12) )
HASHKEYS 200;

-- 10
CREATE TABLE A ( XA NUMBER(10), VA VARCHAR2(12), AA VARCHAR2(20) )
CLUSTER ABC (XA, VA);

-- 11
CREATE TABLE B ( XB NUMBER(10), VB VARCHAR2(12), BB VARCHAR2(20) )
CLUSTER ABC (XB, VB);

-- 12
CREATE TABLE C ( XC NUMBER(10), VC VARCHAR2(12), CC VARCHAR2(20) )
CLUSTER ABC (XC, VC);

-- 13
SELECT * FROM user_clusters;
SELECT * FROM user_tables WHERE cluster_name = 'ABC';
/*
    DROP TABLE A;
    DROP TABLE B;
    DROP TABLE C;
    DROP CLUSTER ABC;
*/

-- 14
CREATE SYNONYM my_c FOR DSZCORE.C;
SELECT * FROM my_c;

-- DROP SYNONYM my_c;
alter session set container = my_pdb; -- for sys
-- 15
CREATE PUBLIC SYNONYM pub_b FOR DSZCORE.B;
SELECT * FROM pub_b;

-- DROP PUBLIC SYNONYM pub_b;

-- 16
CREATE TABLE Par (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(50)
);

CREATE TABLE Dot (
    id NUMBER PRIMARY KEY,
    Par_id NUMBER,
    description VARCHAR2(100),
    CONSTRAINT fk_par FOREIGN KEY (Par_id) REFERENCES Par(id)
);
INSERT INTO Par VALUES (1, 'AAA');
INSERT INTO Par VALUES (2, 'BBB');
INSERT INTO Dot VALUES (101, 1, 'Dot AAA');
INSERT INTO Dot VALUES (102, 1, 'DAT AAA');
INSERT INTO Dot VALUES (103, 2, 'Dot BBB');
COMMIT;

CREATE VIEW V1 AS
SELECT Par.id AS Par_id, Par.name, Dot.id AS Dot_id, Dot.description
FROM Par
INNER JOIN Dot ON Par.id = Dot.Par_id;

SELECT * FROM V1;

-- 17
CREATE MATERIALIZED VIEW MV_DSZCORE
BUILD IMMEDIATE
REFRESH COMPLETE
START WITH SYSDATE
NEXT SYSDATE + NUMTODSINTERVAL (15,'SECOND')
AS SELECT Par.id AS Par_id, Par.name, Dot.id AS Dot_id, Dot.description
FROM Par
INNER JOIN Dot ON Par.id = Dot.Par_id;

-- DROP MATERIALIZED VIEW MV_DSZCORE;

select * from MV_DSZCORE;

INSERT INTO Dot VALUES (109, 2, ' BBB');
COMMIT

EXEC DBMS_MVIEW.REFRESH('MV_DSZCORE');
-- DROP MATERIALIZED VIEW MV_DSZCORE


CREATE DATABASE LINK db_CDSZ
CONNECT TO C##DSZ IDENTIFIED BY "125634"
USING 'localhost:1521/DSZ_PDB';
-- DROP DATABASE LINK db_CDSZ;
-- ALTER SESSION CLOSE DATABASE LINK db_CDSZ;
-- create table c_t ( id number, s varchar2(10));  -- drop table c_t;

SELECT * FROM c_t@db_CDSZ;
insert into c_t@db_CDSZ values (1, 't');
update c_t@db_CDSZ set s = 's' where id = 1;
delete from c_t@db_CDSZ where id = 1;
